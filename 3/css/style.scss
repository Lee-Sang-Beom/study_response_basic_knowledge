body{
	background-color: #111;
	color:#999;
}

.wrapper{

	// height:auto > wrapper안에 담겨져있는 내용물만큼의 높이만 차지
	height: 100vh;

	display: flex;
	justify-content: center;
	align-items:center;

	.team{
		display:flex;
		justify-content: center;
		// background-color: #999;
		align-items:center;
		.team-item{

			// flex-basis : flex-item의 기본 너비 지정
			// 내부 img크기때문에 원하는 값으로 줄어들지 않는다면, 내부 이미지 너비를 부모요소의 100%만큼 차지하게 함
			flex-basis:30%;

			// 애니메이션 발생으로, 자동으로 아이템 너비가 축소되지 않도록 함
			flex-shrink: 0;
			margin: 0 10px;

			// 애니메이션 효과: 모든 종류의 속성에 .4s 적용
			transition: all 0.4s;
			
			img{
				width:100%;
			}

			.profile{
				background-color: #222;
				position:relative;
			}

			.profile-contents{

				// 공간을 차지하지않고, 위로 뜨게
				position:absolute;
				left:0;
				bottom:0;
				padding: 10px;
				color: white;

				h2{
					font-size: 1.6rem;
					font-weight: 800;

					span{
						display: block;
						font-size: 1rem;
						font-weight: normal;
					}
				}
				p{
					display: none;
				}
			}
		}

		// 가상 클래스 hover 추가
		.team-item:hover{
			/* 
			flex-item너비가 40%가 되면서, 높이가 애니메이션이 발생하면,
			 어색한 연출이 발생될 수 있음.

			이유는, teamitem의 부모인 team에서 team-item각각에 대해 
			 세로정렬하는 것을 넣어주지 않으면, 나머지 이미지가 세로축 가운데로 이동해주지 않기때문
			*/
			
			 flex-basis: 40%;

			 // hover대상 기준, 양쪽 margin 추가
			 margin:0 50px;
			 
			 
		}
	}
}